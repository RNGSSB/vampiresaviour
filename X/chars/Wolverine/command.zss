#-------------------------------------------------------------------------------
# 2. State entry
# --------------
# This is where you define what commands bring you to what states.
#
# Each state entry block looks like:
#   #Command-attack           ;Change Label to any name you want to use to
#                               ;identify the state with.
#Before, there were triggers to dictate what should happen for a
#command to work. Now, it can be expressed as following
#Triggerall = stateType!=A
#trigger1 = ctrl
#trigger2 = var(1)
#
#becomes the following
#if stateType!=A &&
#(ctrl||var(1))
#
#  
#   changeState{          ;Don't change this
#   value : new_state_number}
#
# - new_state_number is the number of the state to change to
# - command_name is the name of the command (from the section above)
# - Useful triggers to know:
#   - statetype
#       S, C or A : current state-type of player (stand, crouch, air)
#   - ctrl
#       0 or 1 : 1 if player has control. Unless "interrupting" another
#                move, you'll want ctrl = 1
#   - stateno
#       number of state player is in - useful for "move interrupts"
#   - movecontact
#       0 or 1 : 1 if player's last attack touched the opponent
#                useful for "move interrupts"
#
# Note: The order of state entry is important.
#   State entry with a certain command must come before another state
#   entry with a command that is the subset of the first.
#   For example, command "fwd_a" must be listed before "a", and
#   "fwd_ab" should come before both of the others.
#
# For reference on triggers, see CNS documentation.
#
# Just for your information (skip if you're not interested):
# This part is an extension of the CNS. "State -1" is a special state
# that is executed once every game-tick, regardless of what other state
# you are in.


# Don't remove the following line. It's required by the CMD standard.

#===============================================================================
# Functions
#===============================================================================
#This is not a move, but it sets up $canCombo to be 1 if conditions are right
#for a combo into a special move (used below).
#Since a lot of special moves rely on the same conditions, this reduces
#redundant logic.
[Function Combo() ret]
let ret = 0;
if (stateType != A && ctrl) ||
	((stateNo = [200, 299] || stateNo = [400, 499]) && stateNo != 440 && moveContact) || #!= 440: Except for sweep kick
	(stateNo = 1310 || stateNo = 1330) { #From blocking
	let ret = 1;
}

#===============================================================================
# command code
#===============================================================================
[StateDef -1]

#============|IF roundState = 2|================================================
if roundState = 2 && !aiLevelF { #prevent attacks outside of fight state

if stateType = S || stateType = C {
mapSet{map:"airJumpCount"; value: 1;}
}

#Air Jump
if stateType = A && ctrl && map(airJumpCount) > 0 && map(airJumpInput) != 1{
	if command = "holdup" {
		changeState{value: 46}
	}
}

#Has pressed up for ground jump
if stateNo = 40 || stateNo = 46 {
	if command = "up" || command = "holdup"  {
		mapSet{map:"airJumpInput"; value: 1}
	}
	else{
		mapSet{map:"airJumpInput"; value: 0}
	}
}

#Has stopped pressing any up direction while jumping
if stateType = A && ctrl{
	if (command = "release_up"|| command = "release_upfwd" || command = "release_upback") && command != "holdup"   {
		mapSet{map:"airJumpInput"; value: 0}
	}
}
#-------------------------------------------------------------------------------
#Hi parry
if command = "c" && command != "holddown" && command != "holdfwd" && command != "holdback" &&
	((stateType = S && ctrl) || stateNo = 100)  {
	changeState{value: 700}
}

#-------------------------------------------------------------------------------
#Low parry
if command = "c" && command = "holddown" && command != "holdfwd" && command != "holdback" &&
	((stateType = C && ctrl) || stateNo = 100)  {
	changeState{value: 710}
}

#-------------------------------------------------------------------------------
#Roll
if command = "c" && command = "holdfwd" &&
	(stateType != A && (ctrl || stateNo = 100))  {
	changeState{value: 730}
}

#-------------------------------------------------------------------------------
#Roll Back
if command = "c" && command = "holdback" &&
	(stateType != A && (ctrl || stateNo = 100))  {
	changeState{value: 735}
}

#Run Fwd
if (command = "FF" || command = "z" && command != "holdback") && stateType = S && ctrl {
	changeState{value: 100}
}

#-------------------------------------------------------------------------------
#Run Back
if (command = "BB" || command = "z" && command = "holdback") && stateType = S && (ctrl || stateNo = 100) {
	changeState{value: 105}
}

#===============================================================================
#
#-------------------------------------------------------------------------------
#Stand Light Punch
if command = "x" && command != "holddown" &&
	((stateType = S && (ctrl || stateNo = 100)) ||
		((stateNo = 200 || stateNo = 400) && moveContact)) {
	changeState{value: 200}
}
#-------------------------------------------------------------------------------
#Forward Heavy Punch
if command = "y" && command != "holddown" && command = "holdfwd" &&
	((stateType = S && (ctrl || stateNo = 100)) ||
		((stateNo = 215 || stateNo = 230 || stateNo = 430 || stateNo = 200 || stateNo = 400) && moveContact)) {
	changeState{value: 216}
}
#-------------------------------------------------------------------------------
#Stand Strong Punch
if command = "y" && command != "holddown" && command != "holdfwd" &&
	((stateType = S && (ctrl || stateNo = 100))) && p2Dist X > 100 ||
	(command = "y" && command != "holddown" && command != "holdfwd" && (stateNo = 215) && moveContact) {
	changeState{value: 210}
}

#-------------------------------------------------------------------------------
#Close Stand Strong Punch
if command = "y" && command != "holddown" && command != "holdfwd" &&
	((stateType = S && (ctrl || stateNo = 100))) && p2Dist X <= 100 {
	changeState{value: 215}
}



#-------------------------------------------------------------------------------
#Stand Light Kick
if command = "a" &&Command != "holddown" &&
	((stateType = S && (ctrl || stateNo = 100)) ||
		((stateNo = 230 || stateNo = 430) && moveContact)) {
	changeState{value: 230}
}

#-------------------------------------------------------------------------------
#Standing Strong Kick
if command = "b" &&Command != "holddown" &&
	((stateType = S && (ctrl || stateNo = 100)) ||
		((stateNo = 215 || stateNo = 210 || stateNo = 410) && moveContact)) {
	changeState{value: 240}
}

#-------------------------------------------------------------------------------
#Taunt
if command = "start" && command != "holddown" && stateType != A && ctrl {
	changeState{value: 195}
}

#-------------------------------------------------------------------------------
#Crouching Light Punch
if command = "x" && command = "holddown" && ((stateType = C && ctrl || stateNo = 100) 
||((stateNo = 200 || stateNo = 400) && moveContact)) {
	changeState{value: 400}
}

#-------------------------------------------------------------------------------
#Crouching Strong Punch
if command = "y" && command = "holddown" &&
	((stateType = C && ctrl || stateNo = 100)) {
	changeState{value: 410}
}

#-------------------------------------------------------------------------------
#Crouching Light Kick
if command = "a" && command = "holddown" &&
	((stateType = C && ctrl || stateNo = 100) ||
		((stateNo = 230) && moveContact)) {
	changeState{value: 430}
}

#-------------------------------------------------------------------------------
#Crouching Strong Kick
if command = "b" && command = "holddown" &&
	((stateType = C && ctrl || stateNo = 100) ||
		((stateNo = 215 || stateNo = 430 || stateNo = 230) && moveContact)) {
	changeState{value: 440}
}

#-------------------------------------------------------------------------------
#Jump Light Punch
if command = "x" &&
	((stateType = A && ctrl) ||
		((stateNo = 600) && moveContact) ||
		stateNo = 1350) { #Air blocking
	changeState{value: 600}
}

#-------------------------------------------------------------------------------
#Jump Strong Punch
if command = "y" &&
	((stateType = A && ctrl) || #jump_x or jump_a
		stateNo = 1350) { #Air blocking
	changeState{value: 610}
}

#-------------------------------------------------------------------------------
#Jump Light Kick
if command = "a" && command != "holddown" &&
	((stateType = A && ctrl) ||
		stateNo = 1350) { #Air blocking
	changeState{value: 630}
}

#-------------------------------------------------------------------------------
#Jump Light Kick
if command = "a" && command = "holddown" &&
	((stateType = A && ctrl) ||
		stateNo = 1350) { #Air blocking
	changeState{value: 635}
}

#-------------------------------------------------------------------------------
#Jump Strong Kick
if command = "b" &&
	((stateType = A && ctrl) ||
		((stateNo = 610) && moveContact) || #jump_x or jump_a
		stateNo = 1350) { #Air blocking
	changeState{value: 640}
}

#End of file: roundState = 2
#===============================================================================
}
